name: 'Project Build and Deploy'

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - /tf/**
      - '.github/workflows/infra_**'
    branches:
      - master

env:
  DB_URL: ${{ secrets.DB_URL }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_NAME: ${{ secrets.DB_DATABASE }}
  DB_USERNAME: ${{ secrets.DB_USERNAME }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

jobs:
  build-deploy:
    name: "Build and Deploy"
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Build with Maven
        run: |
          mvn clean install -Dspring.profiles.active=secrets \
            -DDB_URL=${DB_URL} \
            -DDB_PORT=${DB_PORT} \
            -DDB_DATABASE=${DB_DATABASE} \
            -DDB_USERNAME=${DB_USERNAME} \
            -DDB_PASSWORD=${DB_PASSWORD}

      - name: Archive JAR
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.0
          terraform_wrapper: false

      - name: Terraform Verify
        id: fmt
        run: terraform fmt -check

      - name: Terraform Apply
        env:
          TF_VAR_ec2_name: ${{ env.EC2_NAME }}
          TF_VAR_project_name: ${{ env.PROJECT_NAME }}
          TF_VAR_region: ${{ env.AWS_REGION }}
        run: |
          cd tf
          terraform init
          terraform validate
          terraform plan
          terraform apply -auto-approve